{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,6DAA6D;AAC7D,aAAa;AACb,8CAAuB;AAEvB,wEAAqC;AACrC,qCAA4D;AAC5D,qDAAuC;AAEvC,MAAM,gBAAgB;IAKpB,YAAY,OAAY;;QAJxB,4CAAc;QACd,kDAAoB;QACpB,iDAAqC;QAGnC,uBAAA,IAAI,6BAAY,OAAO,MAAA,CAAC;QACxB,uBAAA,IAAI,mCAAkB,uBAAA,IAAI,iCAAS,CAAC,WAAW,MAAA,CAAC;QAChD,uBAAA,IAAI,kCAAiB,SAAS,MAAA,CAAC;IACjC,CAAC;IAED,WAAW;QACT,OAAO,IAAA,qBAAc,EAAC,uBAAA,IAAI,oEAAe,MAAnB,IAAI,CAAiB,CAAC;aACzC,IAAI,CAAC,CAAC,KAAU,EAAE,EAAE;YACnB,uBAAE,CAAC,SAAS,EAAE,CAAC,KAAK,CAAC,2DAA2D,KAAK,EAAE,CAAC,CAAC;YACzF,MAAM,KAAK,CAAC;QACd,CAAC,CAAC,CAAC;IACP,CAAC;IAwCD,cAAc;QACZ,OAAO,aAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAC5B,CAAC;IAED,OAAO;QACL,MAAM,KAAK,GAAG,aAAI,CAAC,KAAK,EAAE,CAAC;QAE3B,uBAAE,CAAC,IAAI,CAAC,uBAAA,IAAI,iCAAS,CAAC,CAAC;QAEvB,uBAAE,CAAC,KAAK,CAAC,MAAM,EAAE,uBAAE,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,CAAC;QAChD,MAAM,CAAC,YAAY,EAAE;aAClB,IAAI,CAAC,GAAG,EAAE;YACT,uBAAE,CAAC,KAAK,CAAC,SAAS,EAAE,uBAAE,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC;YAClD,uBAAA,IAAI,kCAAiB,SAAS,MAAA,CAAC;YAC/B,KAAK,CAAC,OAAO,EAAE,CAAC;QAClB,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,CAAU,EAAE,EAAE;YACpB,uBAAE,CAAC,KAAK,CAAC,OAAO,EAAE,uBAAE,CAAC,OAAO,CAAC,kBAAkB,EAAE,uBAAE,CAAC,eAAe,CAAC,EAAE,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;YACpF,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC,CAAC,CAAC;QAEL,OAAO,KAAK,CAAC,OAAO,CAAC;IACvB,CAAC;IAED,MAAM;QACJ,IAAI,uBAAA,IAAI,sCAAc,KAAK,SAAS,EAAE,CAAC;YACrC,OAAO,aAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC5B,CAAC;QAED,MAAM,KAAK,GAAG,aAAI,CAAC,KAAK,EAAE,CAAC;QAE3B,uBAAE,CAAC,KAAK,CAAC,MAAM,EAAE,uBAAE,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,CAAC;QAChD,MAAM,CAAC,WAAW,EAAE;aACjB,IAAI,CAAC,GAAG,EAAE;YACT,uBAAE,CAAC,KAAK,CAAC,SAAS,EAAE,uBAAE,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC;YAClD,uBAAA,IAAI,kCAAiB,SAAS,MAAA,CAAC;YAC/B,KAAK,CAAC,OAAO,EAAE,CAAC;QAClB,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,CAAU,EAAE,EAAE;YACpB,uBAAE,CAAC,KAAK,CAAC,OAAO,EAAE,uBAAE,CAAC,OAAO,CAAC,iBAAiB,EAAE,uBAAE,CAAC,eAAe,CAAC,EAAE,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;YACnF,iHAAiH;YACjH,KAAK,CAAC,OAAO,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC;QAEL,OAAO,KAAK,CAAC,OAAO,CAAC;IACvB,CAAC;CACF;2NApFC,KAAK;IACH,MAAM,QAAQ,GAAG,uBAAA,IAAI,uCAAe,CAAC,UAAU,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;IACrE,MAAM,MAAM,GAAG,MAAM,IAAA,qBAAc,EAAC,uBAAA,IAAI,uCAAe,CAAC,QAAQ,CAC9D,GAAG,SAAS,iBAAiB,QAAQ,OAAO,EAC5C,GAAG,SAAS,uBAAuB,EACnC,GAAG,SAAS,gBAAgB,CAAC,CAAC,CAAC;IACjC,MAAM,MAAM,GAAG,MAAM,MAAM,CAAC,gBAAgB,EAAE,CAAC;IAE/C,MAAM,eAAe,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IAE3C,eAAe;IACf,QAAQ,MAAM,EAAE,CAAC;QACf,KAAK,QAAQ;YACX,eAAe,CAAC,WAAW,GAAG,uBAAE,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC;YACpE,MAAM;QACR,KAAK,YAAY;YACf,eAAe,CAAC,WAAW,GAAG,uBAAE,CAAC,OAAO,CAAC,6BAA6B,CAAC,CAAC;YACxE,MAAM;QACR;YACE,eAAe,CAAC,WAAW,GAAG,uBAAE,CAAC,OAAO,CAAC,2BAA2B,CAAC,CAAC;IAC1E,CAAC;IAED,IAAI,MAAM,KAAK,QAAQ,EAAE,CAAC;QACxB,MAAM,UAAU,GAAG,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAC9C,eAAe,CAAC,OAAO,GAAG,CAAE,UAAU,CAAE,CAAC;IAC3C,CAAC;SACI,CAAC;QACJ,MAAM,UAAU,GAAG,uBAAE,CAAC,aAAa,EAAE,CAAC;QACtC,MAAM,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC;QAC7B,MAAM,IAAI,GAAG,MAAM,CAAC,aAAa,EAAE,CAAC;QACpC,MAAM,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,EAAE,CAAC;QAC9B,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,GAAG,CAAC;QACvC,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC;IAC/C,CAAC;IAED,OAAO,MAAM,CAAC;AAChB,CAAC;AAkDH,iBAAS,gBAAgB,CAAC","sourcesContent":["// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport libQ from 'kew';\n\nimport js from './lib/LyrionContext';\nimport { jsPromiseToKew, kewToJSPromise } from './lib/Util';\nimport * as System from './lib/System';\n\nclass ControllerLyrion {\n  #context: any;\n  #commandRouter: any;\n  #serverStatus: 'started' | 'stopped';\n\n  constructor(context: any) {\n    this.#context = context;\n    this.#commandRouter = this.#context.coreCommand;\n    this.#serverStatus = 'stopped';\n  }\n\n  getUIConfig() {\n    return jsPromiseToKew(this.#doGetUIConfig())\n      .fail((error: any) => {\n        js.getLogger().error(`[lyrion] getUIConfig(): Cannot populate configuration - ${error}`);\n        throw error;\n      });\n  }\n\n  async #doGetUIConfig() {\n    const langCode = this.#commandRouter.sharedVars.get('language_code');\n    const uiconf = await kewToJSPromise(this.#commandRouter.i18nJson(\n      `${__dirname}/i18n/strings_${langCode}.json`,\n      `${__dirname}/i18n/strings_en.json`,\n      `${__dirname}/UIConfig.json`));\n    const status = await System.getServiceStatus();\n\n    const infoSectionConf = uiconf.sections[0];\n\n    // Info section\n    switch (status) {\n      case 'active':\n        infoSectionConf.description = js.getI18n('LYRION_INFO_DESC_ACTIVE');\n        break;\n      case 'activating':\n        infoSectionConf.description = js.getI18n('LYRION_INFO_DESC_ACTIVATING');\n        break;\n      default:\n        infoSectionConf.description = js.getI18n('LYRION_INFO_DESC_INACTIVE');\n    }\n\n    if (status !== 'active') {\n      const viewReadme = infoSectionConf.content[2];\n      infoSectionConf.content = [ viewReadme ];\n    }\n    else {\n      const thisDevice = js.getDeviceInfo();\n      const host = thisDevice.host;\n      const port = System.getServerPort();\n      const url = `${host}:${port}`;\n      infoSectionConf.content[0].value = url;\n      infoSectionConf.content[1].onClick.url = url;\n    }\n\n    return uiconf;\n  }\n\n  onVolumioStart() {\n    return libQ.resolve(true);\n  }\n\n  onStart() {\n    const defer = libQ.defer();\n\n    js.init(this.#context);\n\n    js.toast('info', js.getI18n('LYRION_STARTING'));\n    System.startService()\n      .then(() => {\n        js.toast('success', js.getI18n('LYRION_STARTED'));\n        this.#serverStatus = 'started';\n        defer.resolve();\n      })\n      .catch((e: unknown) => {\n        js.toast('error', js.getI18n('LYRION_ERR_START', js.getErrorMessage('', e, false)));\n        defer.reject(e);\n      });\n\n    return defer.promise;\n  }\n\n  onStop() {\n    if (this.#serverStatus === 'stopped') {\n      return libQ.resolve(true);\n    }\n\n    const defer = libQ.defer();\n\n    js.toast('info', js.getI18n('LYRION_STOPPING'));\n    System.stopService()\n      .then(() => {\n        js.toast('success', js.getI18n('LYRION_STOPPED'));\n        this.#serverStatus = 'stopped';\n        defer.resolve();\n      })\n      .catch((e: unknown) => {\n        js.toast('error', js.getI18n('LYRION_ERR_STOP', js.getErrorMessage('', e, false)));\n        // Do not reject, in case user is uninstalling a possibly broken installation - rejecting will abort the process.\n        defer.resolve();\n      });\n\n    return defer.promise;\n  }\n}\n\nexport = ControllerLyrion;\n"]}