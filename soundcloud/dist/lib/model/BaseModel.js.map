{"version":3,"file":"BaseModel.js","sourceRoot":"","sources":["../../../src/lib/model/BaseModel.ts"],"names":[],"mappings":"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","sourcesContent":["import md5 from 'md5';\nimport sc from '../SoundCloudContext';\nimport SoundCloud, { type Collection, CollectionContinuation, type EntityType } from 'soundcloud-fetch';\n\nexport interface LoopFetchParams<R, I, C extends LoopFetchCallbackParams, E, F extends LoopFetchResult<E>> extends LoopFetchCallbackParams {\n  callbackParams?: C;\n  getFetchPromise: (params: C) => Promise<R>;\n  getItemsFromFetchResult: (fetchResult: R, params: C) => I[];\n  filterFetchedItem?: (item: I, params: C) => boolean;\n  getNextPageTokenFromFetchResult?: (fetchResult: R, params: C) => string | null;\n  convertToEntity: (item: I, params: C) => Promise<E | null>;\n  onEnd?:(result: LoopFetchResult<E>, lastFetchResult: R, params: C) => F;\n  maxIterations?: number;\n  pageOffset?: number;\n  limit?: number;\n}\n\nexport interface LoopFetchCallbackParams {\n  pageToken?: string;\n}\n\nexport interface LoopFetchResult<E> {\n  items: E[];\n  nextPageToken: string | null;\n  nextPageOffset: number;\n}\n\nexport default abstract class BaseModel {\n\n  static queryMaxLimit = 50;\n\n  static #api: SoundCloud;\n  static #hasAccessToken = false;\n\n  protected getSoundCloudAPI() {\n    return BaseModel.#doGetSoundCloudAPI();\n  }\n\n  static #doGetSoundCloudAPI() {\n    if (!BaseModel.#api) {\n      BaseModel.#api = new SoundCloud();\n    }\n    return BaseModel.#api;\n  }\n\n  static setAccessToken(value: string) {\n    const api = this.#doGetSoundCloudAPI();\n    api.setAccessToken(value);\n    this.#hasAccessToken = !!value;\n  }\n\n  hasAccessToken() {\n    return BaseModel.#hasAccessToken;\n  }\n\n  static setLocale(value: string) {\n    const api = this.#doGetSoundCloudAPI();\n    api.setLocale(value);\n  }\n\n  async #doLoopFetch<R, I, C extends LoopFetchCallbackParams, E, F extends LoopFetchResult<E>>(\n    params: LoopFetchParams<R, I, C, E, F> & { onEnd: undefined }, currentList?: I[], iteration?: number): Promise<LoopFetchResult<E>>;\n  async #doLoopFetch<R, I, C extends LoopFetchCallbackParams, E, F extends LoopFetchResult<E>>(\n    params: LoopFetchParams<R, I, C, E, F>, currentList?: I[], iteration?: number): Promise<F>;\n  async #doLoopFetch<R, I, C extends LoopFetchCallbackParams, E, F extends LoopFetchResult<E>>(\n    params: LoopFetchParams<R, I, C, E, F>, currentList: I[] = [], iteration = 1): Promise<LoopFetchResult<E> | F> {\n\n    const pageOffset = params.pageOffset || 0;\n    const limit = params.limit || 47;\n    const callbackParams = { ...params.callbackParams } as C;\n    if (params.pageToken) {\n      callbackParams.pageToken = params.pageToken;\n    }\n\n    const fetchResult = await params.getFetchPromise(callbackParams);\n\n    let items = [ ...params.getItemsFromFetchResult(fetchResult, callbackParams) ];\n    if (pageOffset) {\n      items.splice(0, pageOffset);\n    }\n    // Number of items to add before hitting limit\n    const itemCountToLimit = limit - currentList.length;\n\n    let nextPageOffset = 0;\n    const filter = params.filterFetchedItem;\n    if (items.length > 0 && filter) {\n      let itemOffset = 0;\n      let includeCount = 0;\n      const filtered = items.filter((item) => {\n        if (includeCount >= itemCountToLimit) {\n          return false;\n        }\n        const inc = filter(item, callbackParams);\n        if (inc) {\n          includeCount++;\n        }\n        itemOffset++;\n        return inc;\n      });\n      if (itemOffset === items.length) {\n        nextPageOffset = 0;\n      }\n      else {\n        nextPageOffset = itemOffset + pageOffset;\n      }\n      items = filtered;\n    }\n    else if (items) {\n      if (items.length > itemCountToLimit) {\n        items.splice(itemCountToLimit);\n        nextPageOffset = items.length + pageOffset;\n      }\n      else {\n        nextPageOffset = 0;\n      }\n    }\n    currentList = [ ...currentList, ...items ];\n\n    let nextPageToken;\n    if (nextPageOffset > 0 && params.pageToken) {\n      nextPageToken = params.pageToken;\n    }\n    else if (nextPageOffset === 0 && params.getNextPageTokenFromFetchResult) {\n      nextPageToken = params.getNextPageTokenFromFetchResult(fetchResult, callbackParams);\n    }\n    else {\n      nextPageToken = null;\n    }\n\n    iteration++;\n    const maxFetchIterationsReached = params.maxIterations !== undefined && iteration > params.maxIterations;\n    if (!maxFetchIterationsReached && currentList.length < limit && nextPageToken) { // Get more items\n      params.pageToken = nextPageToken;\n      params.pageOffset = 0;\n      return await this.#doLoopFetch(params, currentList, iteration);\n    }\n\n    const entities = await Promise.all(currentList.map((item) => params.convertToEntity(item, callbackParams)));\n    const result: LoopFetchResult<E> = {\n      items: entities.filter((entity) => entity) as E[],\n      nextPageToken: maxFetchIterationsReached ? null : nextPageToken,\n      nextPageOffset: maxFetchIterationsReached ? 0 : nextPageOffset\n    };\n    if (params.onEnd) {\n      return params.onEnd(result, fetchResult, callbackParams);\n    }\n    return result;\n\n  }\n\n  loopFetch<R, I, C extends LoopFetchCallbackParams, E, F extends LoopFetchResult<E>>(params: LoopFetchParams<R, I, C, E, F>) {\n    return this.#doLoopFetch({ ...params });\n  }\n\n  protected getCacheKeyForFetch(resourceName: string, cacheKeyParams: Record<string, any>) {\n    const prefix = `soundcloud.model.${resourceName}`;\n    const params: Record<string, any> = {\n      ...cacheKeyParams,\n      locale: sc.getConfigValue('locale')\n    };\n    const key = Object.keys(params).sort().reduce((s, k) => {\n      const p = `${k}=${encodeURIComponent(JSON.stringify(params[k]))}`;\n      return `${s}@${p}`;\n    }, prefix);\n\n    return md5(key);\n  }\n\n  protected commonGetCollectionItemsFromLoopFetchResult<T extends EntityType>(result: Collection<T>): T[] {\n    return result.items;\n  }\n\n  protected commonGetNextPageTokenFromLoopFetchResult<T extends EntityType>(result: Collection<T>) {\n    const items = result.items;\n    if (items.length > 0 && result.continuation) {\n      return CollectionContinuation.stringify(result.continuation);\n    }\n    return null;\n  }\n\n  protected async commonGetLoopFetchResultByPageToken<T extends EntityType>(params: LoopFetchCallbackParams): Promise<Collection<T> | null> {\n    if (params.pageToken) {\n      const api = this.getSoundCloudAPI();\n      const continuation = CollectionContinuation.parse(params.pageToken) as CollectionContinuation<T>;\n      if (continuation) {\n        return api.getContinuation(continuation);\n      }\n    }\n    return null;\n  }\n}\n"]}